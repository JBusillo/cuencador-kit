/**
 * @param {import('@sveltejs/kit').Request} request
 * @param {any} context
 * @returns {import('@sveltejs/kit').Response}
 */
/** @type {import('@sveltejs/kit').get} */

import { facebookConfig } from '$lib/config/login.config';
import fetch from 'node-fetch';
import { getSession } from '$lib/config/database.config';
import { encrypt } from '$lib/config/crypto.config';

export async function get(request): Promise<any> {
	//    let loginConfig = await getLoginConfig()
	let user_access_token = request.query.get('token');

	//verify the access token
	let url = `https://graph.facebook.com/debug_token?input_token=${user_access_token}&access_token=${facebookConfig.FacebookAppAccessToken}`;
	let response = await fetch(url, {
		method: 'GET'
	});
	let data = await response.json();
	const user_id = data.data.user_id;

	// exchange for a long lived token
	url =
		'https://graph.facebook.com/v10.0/oauth/access_token?grant_type=fb_exchange_token' +
		`&client_id=${facebookConfig.FacebookClientId}` +
		`&client_secret=${facebookConfig.FacebookSecret}` +
		`&fb_exchange_token=${user_access_token}` +
		`&redirect_uri=${facebookConfig.FacebookRedirectUri}`;

	response = await fetch(url, {
		method: 'GET'
	});
	data = await response.json();
	user_access_token = data.access_token;

	// get requested data
	url = `https://graph.facebook.com/${user_id}?fields=id,name,email&access_token=${user_access_token}`;
	response = await fetch(url, {
		method: 'GET'
	});
	data = await response.json();

	const sess = await getSession();

	const sql = `INSERT INTO Cuencador.Users
    (SOCIAL_KEY, NAME, EMAIL, UAT)
    VALUES('F${data.id}', '${data.name}', '${data.email}', '${user_access_token}')
    ON DUPLICATE KEY UPDATE NAME='${data.name}', EMAIL='${data.email}', UAT='${user_access_token}'`;

	const qResult = await sess.sql(sql).execute();

	const userId = qResult.getAutoIncrementValue().toString();
	console.log(`Autogenerated Id: ${userId}`);

	sess.close();

	return {
		body: {
			ok: true,
			userdata: {
				userId: encrypt(data.id),
				name: data.name,
				email: data.email
			}
		}
	};
}
