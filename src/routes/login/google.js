/**
 * @param {import('@sveltejs/kit').Request} request
 * @param {any} context
 * @returns {import('@sveltejs/kit').Response}
 */
import { googleConfig } from '$lib/config/login.config'
import { getSession } from '$lib/config/database.config'

let client = null;

export async function get(request, context) {
    let client = googleConfig.googleClient

    let idToken = request.query.get("id_token");

    async function verify() {
        const ticket = await client.verifyIdToken({
            idToken, //: request.query.get("id_token"),
            audience: googleConfig.GoogleClientId,  // Specify the CLIENT_ID of the app that accesses the backend
        });
        return ticket.getPayload();
    }
    let res = await verify().catch(console.error);

    let sess = await getSession()

    let sql = `INSERT INTO Cuencador.Users
    (SOCIAL_KEY, NAME, EMAIL, UAT)
    VALUES('G${res.sub}', '${res.name}', '${res.email}', '${idToken}')
    ON DUPLICATE KEY UPDATE NAME='${res.name}', EMAIL='${res.email}', UAT='${idToken}'`

    let qResult = await sess.sql(sql).execute()

    let userId = (qResult.getAutoIncrementValue()).toString()
    console.log(`Autogenerated Id: ${userId}`);

    sess.close()


    return {
        body: JSON.stringify({ email: res['email'], email_verified: res['email_verified'], name: res['name'], idToken }),
    }
}

